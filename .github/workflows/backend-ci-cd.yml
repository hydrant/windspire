name: Backend CI/CD

on:
  push:
    branches: [ main, static_web_app_refactor ]
    paths:
      - 'windspire_backend/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'windspire_backend/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: windspire_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          windspire_backend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('windspire_backend/**/Cargo.lock') }}

    - name: Install SQLx CLI
      run: cargo install sqlx-cli --no-default-features --features rustls,postgres

    - name: Setup test database
      run: |
        cd windspire_backend
        sqlx database create
        sqlx migrate run
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/windspire_test

    - name: Check formatting
      run: |
        cd windspire_backend
        cargo fmt --all -- --check

    - name: Run Clippy
      run: |
        cd windspire_backend
        cargo clippy --all-targets --all-features -- -D warnings
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/windspire_test

    - name: Run tests
      run: |
        cd windspire_backend
        cargo test --verbose
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/windspire_test
        RUST_LOG: debug

    - name: Build for release
      run: |
        cd windspire_backend
        cargo build --release
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/windspire_test

  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: |
        cd windspire_backend
        cargo audit

  coverage:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: windspire_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Install SQLx CLI
      run: cargo install sqlx-cli --no-default-features --features rustls,postgres

    - name: Setup test database
      run: |
        cd windspire_backend
        sqlx database create
        sqlx migrate run
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/windspire_test

    - name: Generate code coverage
      run: |
        cd windspire_backend
        cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/windspire_test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: windspire_backend/lcov.info
        fail_ci_if_error: true